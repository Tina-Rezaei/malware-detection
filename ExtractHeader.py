import pefile
import os

base_path = "/media/tina/Elements/tina_dataset/extractable header file/"
file_list = os.listdir(base_path)

count = 1
list_name = []

for file in file_list:
    try:
        filename = os.path.basename(str(file))
        pe = pefile.PE(base_path + file)
        header = pe.header

        header_bytes = []
        for byte in header:
            header_bytes.append(byte)
        header_bytes = header_bytes[0:1024]

        # check if the length of the header is less than 1024 then pad 0
        if len(header_bytes) < 1024:
            print("less than 1024, {} ".format(file))
            for i in range(1024 - len(header_bytes)):
                header_bytes.append(0)

        headerfile = open(os.path.join(base_path, 'header1024', file), "wb")
        headerfile.write(bytes(header_bytes))
        headerfile.close()

        # Extracting DOS_Header,File_Header and Optional_Header
        sub_header = []

        # DOS_Header is the first 64 Bytes of the file
        sub_header += header[0:64]

        # File_Header
        FileHeader_Offset = pe.DOS_HEADER.e_lfanew + pe.NT_HEADERS.sizeof()
        sub_header += header[FileHeader_Offset:FileHeader_Offset + pe.FILE_HEADER.sizeof()]

        # Optional_Header
        OptionalHeader_Offset = FileHeader_Offset + pe.FILE_HEADER.sizeof()
        sub_header += header[OptionalHeader_Offset:OptionalHeader_Offset + 240]
        headerfile = open(os.path.join(base_path, '3header', file), "wb")
        headerfile.write(bytes(header))
        headerfile.close()


    except Exception as e:
        print(e)
        print(file)
        continue
